# -*- coding: utf-8 -*-

from odoo import models, fields, api, _
from odoo.exceptions import UserError


class BudgetConsolidationWizard(models.TransientModel):
    """Wizard –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—ó"""
    _name = 'budget.consolidation.wizard'
    _description = '–ú–∞–π—Å—Ç–µ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—ó –±—é–¥–∂–µ—Ç—ñ–≤'

    # –û—Å–Ω–æ–≤–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    period_id = fields.Many2one('budget.period', '–ü–µ—Ä—ñ–æ–¥', required=True)
    budget_type_id = fields.Many2one('budget.type', '–¢–∏–ø –±—é–¥–∂–µ—Ç—É', required=True)

    # –†—ñ–≤–Ω—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
    create_holding_budgets = fields.Boolean('–°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –±—é–¥–∂–µ—Ç–∏ —Ö–æ–ª–¥–∏–Ω–≥—É', default=True)
    create_company_budgets = fields.Boolean('–°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –±—é–¥–∂–µ—Ç–∏ –∫–æ–º–ø–∞–Ω—ñ–π', default=True)
    create_site_budgets = fields.Boolean('–°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –±—é–¥–∂–µ—Ç–∏ –ø–ª–æ—â–∞–¥–æ–∫', default=True)
    create_for_all_levels = fields.Boolean('–î–ª—è –≤—Å—ñ—Ö —Ä—ñ–≤–Ω—ñ–≤ –¶–ë–û', default=True)

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    auto_consolidate_enabled = fields.Boolean('–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ–∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—é', default=True)
    copy_from_previous_period = fields.Boolean('–ö–æ–ø—ñ—é–≤–∞—Ç–∏ –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É', default=False)
    send_notifications = fields.Boolean('–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–º', default=True)

    # –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥
    preview_structure = fields.Text('–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏', readonly=True)

    def action_preview_structure(self):
        """–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—ó"""
        structure_info = self._analyze_consolidation_structure()

        preview_text = f"""
üèóÔ∏è –°–¢–†–£–ö–¢–£–†–ê –ö–û–ù–°–û–õ–Ü–î–ê–¶–Ü–á

üìÖ –ü–µ—Ä—ñ–æ–¥: {self.period_id.name}
üìÇ –¢–∏–ø –±—é–¥–∂–µ—Ç—É: {self.budget_type_id.name}

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
‚Ä¢ –•–æ–ª–¥–∏–Ω–≥–æ–≤–∏—Ö –¶–ë–û: {structure_info['holding_count']}
‚Ä¢ –ö–æ–º–ø–∞–Ω—ñ–π–Ω–∏—Ö –¶–ë–û: {structure_info['company_count']}  
‚Ä¢ –ü–ª–æ—â–∞–¥–∫–æ–≤–∏—Ö –¶–ë–û: {structure_info['site_count']}
‚Ä¢ –ó–∞–≥–∞–ª–æ–º –±—é–¥–∂–µ—Ç—ñ–≤ –±—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ: {structure_info['total_budgets']}

üè¢ –°–¢–†–£–ö–¢–£–†–ê –•–û–õ–î–ò–ù–ì–£:
{structure_info['structure_tree']}

‚öôÔ∏è –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø:
‚Ä¢ –ê–≤—Ç–æ–∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—è: {'‚úÖ –£–≤—ñ–º–∫–Ω–µ–Ω–∞' if self.auto_consolidate_enabled else '‚ùå –í–∏–º–∫–Ω–µ–Ω–∞'}
‚Ä¢ –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É: {'‚úÖ –¢–∞–∫' if self.copy_from_previous_period else '‚ùå –ù—ñ'}
‚Ä¢ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è: {'‚úÖ –ë—É–¥—É—Ç—å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ' if self.send_notifications else '‚ùå –ù–µ –±—É–¥—É—Ç—å'}

üéØ –ì–û–¢–û–í–ò–ô –î–û –°–¢–í–û–†–ï–ù–ù–Ø!
        """

        self.preview_structure = preview_text

        return {
            'type': 'ir.actions.act_window',
            'res_model': 'budget.consolidation.wizard',
            'res_id': self.id,
            'view_mode': 'form',
            'target': 'new',
            'context': {'preview_done': True}
        }

    def action_create_structure(self):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—Å—ñ—î—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—ó"""
        created_budgets = self.env['budget.plan'].create_consolidation_structure(
            self.period_id.id,
            self.budget_type_id.id
        )

        if not created_budgets:
            raise UserError('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±—é–¥–∂–µ—Ç—ñ–≤. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¶–ë–û.')

        # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∞–≤—Ç–æ–∫–æ–Ω—Å–æ–ª—ñ–¥–∞—Ü—ñ—é
        if self.auto_consolidate_enabled:
            for budget in created_budgets.values():
                budget.auto_consolidate = True

        # –ö–æ–ø—ñ—é—î–º–æ –¥–∞–Ω—ñ –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É
        if self.copy_from_previous_period:
            self._copy_from_previous_period(created_budgets)

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        if self.send_notifications:
            self._send_notifications(created_budgets)

        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        result_message = f"""
‚úÖ –°–¢–†–£–ö–¢–£–†–ê –ö–û–ù–°–û–õ–Ü–î–ê–¶–Ü–á –°–¢–í–û–†–ï–ù–ê!

üìä –°—Ç–≤–æ—Ä–µ–Ω–æ –±—é–¥–∂–µ—Ç—ñ–≤: {len(created_budgets)}
üìÖ –ü–µ—Ä—ñ–æ–¥: {self.period_id.name}
üìÇ –¢–∏–ø: {self.budget_type_id.name}

üéØ –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:
1. –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –±—é–¥–∂–µ—Ç–∏ –ø–ª–æ—â–∞–¥–æ–∫
2. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–Ω—Å–æ–ª—ñ–¥—É—î –¥–∞–Ω—ñ –≤–≥–æ—Ä—É
3. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ç–∞ –∑–∞—Ç–≤–µ—Ä–¥—ñ—Ç—å –∫–æ–Ω—Å–æ–ª—ñ–¥–æ–≤–∞–Ω—ñ –±—é–¥–∂–µ—Ç–∏
        """

        return {
            'type': 'ir.actions.client',
            'tag': 'display_notification',
            'params': {
                'title': '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞!',
                'message': result_message,
                'type': 'success',
                'sticky': True,
                'next': {
                    'type': 'ir.actions.act_window',
                    'name': '–°—Ç–≤–æ—Ä–µ–Ω—ñ –±—é–¥–∂–µ—Ç–∏',
                    'res_model': 'budget.plan',
                    'view_mode': 'tree,form',
                    'domain': [('id', 'in', list(created_budgets.values()))],
                    'context': {'group_by': ['consolidation_level', 'cbo_id']}
                }
            }
        }

    def _analyze_consolidation_structure(self):
        """–ê–Ω–∞–ª—ñ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É"""
        cbo_obj = self.env['budget.responsibility.center']

        # –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –¶–ë–û –ø–æ —Ä—ñ–≤–Ω—è—Ö
        holding_cbos = cbo_obj.search([('cbo_type', '=', 'holding')])
        company_cbos = cbo_obj.search([('cbo_type', 'in', ['enterprise', 'business_direction'])])
        site_cbos = cbo_obj.search([('cbo_type', 'in', ['department', 'division', 'office'])])

        total_budgets = 0
        if self.create_holding_budgets:
            total_budgets += len(holding_cbos)
        if self.create_company_budgets:
            total_budgets += len(company_cbos)
        if self.create_site_budgets:
            total_budgets += len(site_cbos)

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ä–µ–≤–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
        structure_tree = ""
        for holding in holding_cbos:
            structure_tree += f"üè¢ {holding.name}\n"

            companies = cbo_obj.search([('parent_id', '=', holding.id)])
            for company in companies:
                structure_tree += f"  ‚îú‚îÄ‚îÄ üè≠ {company.name}\n"

                sites = cbo_obj.search([('parent_id', '=', company.id)])
                for i, site in enumerate(sites):
                    prefix = "  ‚îÇ   ‚îî‚îÄ‚îÄ" if i == len(sites) - 1 else "  ‚îÇ   ‚îú‚îÄ‚îÄ"
                    structure_tree += f"{prefix} üè™ {site.name}\n"

        return {
            'holding_count': len(holding_cbos),
            'company_count': len(company_cbos),
            'site_count': len(site_cbos),
            'total_budgets': total_budgets,
            'structure_tree': structure_tree or "‚ùå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¶–ë–û –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞"
        }

    def _copy_from_previous_period(self, created_budgets):
        """–ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä—ñ–æ–¥—É"""
        copy_wizard_obj = self.env['budget.copy.wizard']

        for cbo_id, budget in created_budgets.items():
            # –®—É–∫–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –±—é–¥–∂–µ—Ç —Ç–æ–≥–æ –∂ —Ç–∏–ø—É —Ç–∞ –¶–ë–û
            previous_budget = self.env['budget.plan'].search([
                ('cbo_id', '=', cbo_id),
                ('budget_type_id', '=', self.budget_type_id.id),
                ('period_id.date_end', '<', self.period_id.date_start)
            ], order='period_id desc', limit=1)

            if previous_budget:
                # –°—Ç–≤–æ—Ä—é—î–º–æ wizard –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
                copy_wizard = copy_wizard_obj.create({
                    'target_budget_id': budget.id,
                    'copy_mode': 'another_budget',
                    'source_budget_id': previous_budget.id,
                    'copy_amounts': True,
                    'copy_categories': True,
                    'copy_descriptions': True,
                    'amount_adjustment_type': 'none'
                })

                # –í–∏–∫–æ–Ω—É—î–º–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è
                copy_wizard.action_execute_copy()

    def _send_notifications(self, created_budgets):
        """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Å–ø–æ–≤—ñ—â–µ–Ω—å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–º –∑–∞ –±—é–¥–∂–µ—Ç–∏"""
        for budget in created_budgets.values():
            if budget.responsible_user_id:
                budget.activity_schedule(
                    'mail.mail_activity_data_todo',
                    user_id=budget.responsible_user_id.id,
                    summary=f'–ù–æ–≤–∏–π –±—é–¥–∂–µ—Ç –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è: {budget.name}',
                    note=f"""
–°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π –±—é–¥–∂–µ—Ç –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è:

üìã –ù–∞–∑–≤–∞: {budget.name}
üìÖ –ü–µ—Ä—ñ–æ–¥: {budget.period_id.name}
üè¢ –¶–ë–û: {budget.cbo_id.name}
üìÇ –¢–∏–ø: {budget.budget_type_id.name}

–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –ø–ª–∞–Ω–æ–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–∞ –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.
                    """
                )

                budget.message_post(
                    body=f"–ë—é–¥–∂–µ—Ç –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ–º—É: {budget.responsible_user_id.name}",
                    subject="–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ–≥–æ",
                    partner_ids=[budget.responsible_user_id.partner_id.id]
                )