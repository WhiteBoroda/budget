<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- Server Actions –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ -->

    <!-- Action –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <record id="action_assign_categories_wizard" model="ir.actions.server">
        <field name="name">üìÇ –ü—Ä–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</field>
        <field name="model_id" ref="model_budget_plan_line"/>
        <field name="binding_model_id" ref="model_budget_plan_line"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
if records:
    action = {
        'type': 'ir.actions.act_window',
        'name': '–ü—Ä–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó',
        'res_model': 'budget.assign.categories.wizard',
        'view_mode': 'form',
        'target': 'new',
        'context': {
            'default_line_ids': [(6, 0, records.ids)],
            'active_model': 'budget.plan.line',
            'active_ids': records.ids,
        }
    }
else:
    raise UserError('–û–±–µ—Ä—ñ—Ç—å –ø–æ–∑–∏—Ü—ñ—ó –±—é–¥–∂–µ—Ç—É –¥–ª—è –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π')
        </field>
    </record>

    <!-- Action –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <record id="action_clear_categories" model="ir.actions.server">
        <field name="name">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</field>
        <field name="model_id" ref="model_budget_plan_line"/>
        <field name="binding_model_id" ref="model_budget_plan_line"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
if records:
    editable_lines = records.filtered(lambda l: l.plan_id.state in ['draft', 'planning', 'revision'])

    if editable_lines:
        editable_lines.write({
            'budget_category_id': False,
            'cost_center_id': False,
        })

        action = {
            'type': 'ir.actions.client',
            'tag': 'display_notification',
            'params': {
                'title': '–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –æ—á–∏—â–µ–Ω–æ',
                'message': f'–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –æ—á–∏—â–µ–Ω–æ –¥–ª—è {len(editable_lines)} –ø–æ–∑–∏—Ü—ñ–π',
                'type': 'success',
            }
        }
    else:
        raise UserError('–ù–µ–º–∞—î –ø–æ–∑–∏—Ü—ñ–π, —è–∫—ñ –º–æ–∂–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏')
else:
    raise UserError('–û–±–µ—Ä—ñ—Ç—å –ø–æ–∑–∏—Ü—ñ—ó –±—é–¥–∂–µ—Ç—É')
        </field>
    </record>

    <!-- Action –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
    <record id="action_auto_detect_categories" model="ir.actions.server">
        <field name="name">ü§ñ –ê–≤—Ç–æ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π</field>
        <field name="model_id" ref="model_budget_plan_line"/>
        <field name="binding_model_id" ref="model_budget_plan_line"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
def auto_detect_category(description):
    """–ü—Ä–æ—Å—Ç–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é"""
    if not description:
        return None

    desc_lower = description.lower()

    # –ú–∞–ø–ø–∏–Ω–≥ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    category_mapping = {
        '–∑–∞–ø—á–∞—Å—Ç': 'spare_parts',
        '—Ä–µ–º–æ–Ω—Ç': 'maintenance',
        '–ø—Ä–æ–≥—Ä–∞–º': 'software',
        '—Å–≤—è–∑—å': 'communication',
        '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç': 'communication',
        '–º–æ–±–∏–ª—å–Ω': 'communication',
        '–∫–æ–º–∞–Ω–¥–∏—Ä': 'travel',
        '–∫–∞–Ω—Ü—Ç–æ–≤–∞—Ä': 'office_supplies',
        '—ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥': 'utilities',
        '–≥–∞–∑': 'utilities',
        '–≤–æ–¥–∞': 'utilities',
        '–∑–∞—Ä–ø–ª–∞—Ç': 'salary',
        '–ø—Ä–µ–º–∏–∏': 'salary',
        '–æ–±—É—á–µ–Ω–∏–µ': 'training',
        '—Ä–µ–∫–ª–∞–º': 'marketing',
    }

    # –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –∫–æ–¥—É
    for keyword, category_code in category_mapping.items():
        if keyword in desc_lower:
            category = env['budget.category'].search([
                ('code', 'ilike', category_code)
            ], limit=1)
            if category:
                return category.id
    return None

if records:
    updated_count = 0
    editable_lines = records.filtered(lambda l: l.plan_id.state in ['draft', 'planning', 'revision'])

    for line in editable_lines:
        if not line.budget_category_id:  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞
            category_id = auto_detect_category(line.description)
            if category_id:
                line.write({'budget_category_id': category_id})
                line._compute_accounting_data()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç–∞
                updated_count += 1

    action = {
        'type': 'ir.actions.client',
        'tag': 'display_notification',
        'params': {
            'title': '–ê–≤—Ç–æ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ',
            'message': f'–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–∏–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è {updated_count} –ø–æ–∑–∏—Ü—ñ–π –∑ {len(editable_lines)}',
            'type': 'info' if updated_count > 0 else 'warning',
        }
    }
else:
    raise UserError('–û–±–µ—Ä—ñ—Ç—å –ø–æ–∑–∏—Ü—ñ—ó –±—é–¥–∂–µ—Ç—É')
        </field>
    </record>

    <!-- Action –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ —à–∞–±–ª–æ–Ω–∞ -->
    <record id="action_copy_categories_from_template" model="ir.actions.server">
        <field name="name">üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –∑ —à–∞–±–ª–æ–Ω—É</field>
        <field name="model_id" ref="model_budget_plan"/>
        <field name="binding_model_id" ref="model_budget_plan"/>
        <field name="binding_view_types">form</field>
        <field name="state">code</field>
        <field name="code">
if record and record.budget_type_id:
    # –ò—â–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –±—é–¥–∂–µ—Ç–∞
    template = env['budget.template'].search([
        ('budget_type_id', '=', record.budget_type_id.id),
        ('is_default', '=', True)
    ], limit=1)

    if not template:
        template = env['budget.template'].search([
            ('budget_type_id', '=', record.budget_type_id.id)
        ], limit=1)

    if template:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ —à–∞–±–ª–æ–Ω–∞
        created_lines = 0
        for template_line in template.line_ids:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–æ–∑–∏—Ü–∏–∏
            existing = record.line_ids.filtered(
                lambda l: l.description == template_line.description
            )

            if not existing:
                env['budget.plan.line'].create({
                    'plan_id': record.id,
                    'description': template_line.description,
                    'budget_category_id': template_line.budget_category_id.id if hasattr(template_line, 'budget_category_id') else False,
                    'quantity': template_line.default_quantity,
                    'unit_price': template_line.default_unit_price,
                    'planned_amount': template_line.default_quantity * template_line.default_unit_price,
                    'calculation_method': template_line.calculation_method,
                    'notes': f'–°—Ç–≤–æ—Ä–µ–Ω–æ –∑ —à–∞–±–ª–æ–Ω—É: {template.name}',
                })
                created_lines += 1

        action = {
            'type': 'ir.actions.client',
            'tag': 'display_notification',
            'params': {
                'title': '–®–∞–±–ª–æ–Ω –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ',
                'message': f'–°—Ç–≤–æ—Ä–µ–Ω–æ {created_lines} –ø–æ–∑–∏—Ü—ñ–π –∑ —à–∞–±–ª–æ–Ω—É "{template.name}"',
                'type': 'success',
            }
        }
    else:
        action = {
            'type': 'ir.actions.client',
            'tag': 'display_notification',
            'params': {
                'title': '–®–∞–±–ª–æ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                'message': f'–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω –¥–ª—è —Ç–∏–ø—É –±—é–¥–∂–µ—Ç—É "{record.budget_type_id.name}"',
                'type': 'warning',
            }
        }
else:
    raise UserError('–û–±–µ—Ä—ñ—Ç—å –±—é–¥–∂–µ—Ç –∑ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–º —Ç–∏–ø–æ–º')
        </field>
    </record>

</odoo>