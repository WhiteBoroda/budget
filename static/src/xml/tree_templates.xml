<?xml version="1.0" encoding="utf-8"?>
<templates xml:space="preserve">

    <!-- –®–ê–ë–õ–û–ù –Ü–Ñ–†–ê–†–•–Ü–ß–ù–û–ì–û –î–ï–†–ï–í–ê - –°–£–ú–Ü–°–ù–ò–ô –ó ODOO 17 -->
    <t t-name="budget.HierarchyTreeWidget" owl="1">
        <div class="hierarchy-tree-widget" t-ref="hierarchy-tree-widget">

            <!-- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è -->
            <div t-if="state.loading" class="hierarchy-tree-loading">
                <i class="fa fa-spinner fa-spin"></i>
                <span>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó...</span>
            </div>

            <!-- –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
            <div t-else="">
                <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑ –∫–æ–Ω—Ç—Ä–æ–ª–∞–º–∏ -->
                <div class="hierarchy-tree-header">
                    <h4 class="hierarchy-tree-title">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó</h4>

                    <div class="hierarchy-tree-controls">
                        <!-- –ü–æ—à—É–∫ -->
                        <div class="search-container">
                            <input type="text"
                                   class="hierarchy-tree-filter"
                                   placeholder="üîç –ü–æ—à—É–∫ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ..."
                                   t-model="state.searchQuery"
                                   t-on-input="onSearchInput"/>
                        </div>

                        <!-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è -->
                        <button class="btn btn-sm btn-outline-secondary"
                                t-on-click="expandAll"
                                title="–†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ –≤—Å–µ">
                            <i class="fa fa-expand"></i>
                            –†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ –≤—Å–µ
                        </button>

                        <button class="btn btn-sm btn-outline-secondary"
                                t-on-click="collapseAll"
                                title="–ó–≥–æ—Ä–Ω—É—Ç–∏ –≤—Å–µ">
                            <i class="fa fa-compress"></i>
                            –ó–≥–æ—Ä–Ω—É—Ç–∏ –≤—Å–µ
                        </button>

                        <button class="btn btn-sm btn-outline-primary"
                                t-on-click="() => this.loadTreeData()"
                                title="–û–Ω–æ–≤–∏—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É">
                            <i class="fa fa-refresh"></i>
                            –û–Ω–æ–≤–∏—Ç–∏
                        </button>
                    </div>
                </div>

                <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–µ—Ä–µ–≤–∞ -->
                <div class="hierarchy-tree-container" t-ref="tree-container">
                    <t t-if="state.treeData.length > 0">
                        <t t-foreach="state.treeData" t-as="node" t-key="node.id">
                            <t t-call="budget.HierarchyTreeNode">
                                <t t-set="node" t-value="node"/>
                                <t t-set="level" t-value="0"/>
                            </t>
                        </t>
                    </t>

                    <!-- –ü—É—Å—Ç–∏–π —Å—Ç–∞–Ω -->
                    <div t-else="" class="hierarchy-tree-empty">
                        <div class="hierarchy-tree-empty-icon">üå≥</div>
                        <h3 class="hierarchy-tree-empty-title">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä–æ–∂–Ω—è</h3>
                        <p class="hierarchy-tree-empty-description">
                            –î–æ–¥–∞–π—Ç–µ —Ü–µ–Ω—Ç—Ä–∏ –±—é–¥–∂–µ—Ç–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–π–Ω–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
                        </p>
                        <button class="btn btn-primary"
                                t-on-click="() => this.createRootNode()">
                            <i class="fa fa-plus"></i>
                            –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—à–∏–π –¶–ë–û
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <!-- –®–ê–ë–õ–û–ù –í–£–ó–õ–ê –î–ï–†–ï–í–ê -->
    <t t-name="budget.HierarchyTreeNode" owl="1">
        <t t-set="isExpanded" t-value="state.expandedNodes.has(node.id)"/>
        <t t-set="isSelected" t-value="state.selectedNode === node.id"/>
        <t t-set="hasChildren" t-value="node.children and node.children.length > 0"/>
        <t t-set="matchesSearch" t-value="!state.searchQuery or nodeMatchesSearch(node, state.searchQuery)"/>

        <!-- –†–µ–Ω–¥–µ—Ä–∏–º –≤—É–∑–æ–ª —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—ñ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –ø–æ—à—É–∫—É -->
        <div t-if="matchesSearch or hasMatchingDescendants(node)"
             class="hierarchy-tree-node"
             t-att-class="{
                'selected': isSelected,
                ['cbo-type-' + node.cbo_type]: true,
                ['hierarchy-tree-level-' + level]: true,
                'inactive': !node.active
             }"
             t-att-data-node-id="node.id"
             t-att-data-level="level"
             t-on-click="() => this.selectNode(node.id)"
             t-on-dblclick="() => this.openNodeForm(node)">

            <div class="hierarchy-tree-content">
                <!-- –ö–Ω–æ–ø–∫–∞ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è/–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è -->
                <span class="hierarchy-tree-toggle"
                      t-att-class="{'has-children': hasChildren}"
                      t-on-click.stop="() => this.toggleNode(node.id)">
                    <t t-if="hasChildren">
                        <i t-if="isExpanded" class="fa fa-caret-down"></i>
                        <i t-else="" class="fa fa-caret-right"></i>
                    </t>
                </span>

                <!-- –Ü–∫–æ–Ω–∫–∞ —Ç–∏–ø—É –¶–ë–û -->
                <span class="hierarchy-tree-icon">
                    <i t-att-class="`fa ${node.icon || 'fa-folder'} ${node.color_class || 'text-secondary'}`"></i>
                </span>

                <!-- –ù–∞–∑–≤–∞ –¶–ë–û -->
                <span class="hierarchy-tree-label" t-att-title="node.name">
                    <t t-esc="node.name"/>
                </span>

                <!-- –ö–æ–¥ –¶–ë–û -->
                <span t-if="node.code"
                      class="hierarchy-tree-badge badge badge-secondary"
                      t-att-title="`–ö–æ–¥ –¶–ë–û: ${node.code}`">
                    <t t-esc="node.code"/>
                </span>

                <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω—ñ –∑–Ω–∞—á–∫–∏ -->
                <div class="hierarchy-tree-meta">
                    <!-- –ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—é–¥–∂–µ—Ç—ñ–≤ -->
                    <span t-if="node.budget_count > 0"
                          class="hierarchy-tree-badge badge badge-info"
                          t-att-title="`–ö—ñ–ª—å–∫—ñ—Å—Ç—å –±—é–¥–∂–µ—Ç—ñ–≤: ${node.budget_count}`">
                        <i class="fa fa-bar-chart"></i>
                        <t t-esc="node.budget_count"/>
                    </span>

                    <!-- –ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—á—ñ—Ä–Ω—ñ—Ö –¶–ë–û -->
                    <span t-if="node.child_count > 0"
                          class="hierarchy-tree-badge badge badge-secondary"
                          t-att-title="`–î–æ—á—ñ—Ä–Ω—ñ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏: ${node.child_count}`">
                        <i class="fa fa-building"></i>
                        <t t-esc="node.child_count"/>
                    </span>

                    <!-- –í—ñ–¥—Å–æ—Ç–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è -->
                    <span t-if="node.execution_rate > 0"
                          class="hierarchy-tree-badge badge"
                          t-att-class="`badge-${getExecutionBadgeClass(node.execution_rate)}`"
                          t-att-title="`–í–∏–∫–æ–Ω–∞–Ω–Ω—è –±—é–¥–∂–µ—Ç—É: ${node.execution_rate.toFixed(1)}%`">
                        <i class="fa fa-percent"></i>
                        <t t-esc="node.execution_rate.toFixed(1)"/>%
                    </span>
                </div>

                <!-- –î—ñ—ó –Ω–∞–¥ –≤—É–∑–ª–æ–º -->
                <div class="hierarchy-tree-actions">
                    <!-- –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –±—é–¥–∂–µ—Ç–∏ -->
                    <button t-if="node.budget_count > 0"
                            class="hierarchy-tree-action btn-tree-primary"
                            t-on-click.stop="() => this.viewBudgets(node)"
                            title="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –±—é–¥–∂–µ—Ç–∏">
                        <i class="fa fa-bar-chart"></i>
                    </button>

                    <!-- –°—Ç–≤–æ—Ä–∏—Ç–∏ –±—é–¥–∂–µ—Ç -->
                    <button class="hierarchy-tree-action btn-tree-success"
                            t-on-click.stop="() => this.createBudget(node)"
                            title="–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –±—é–¥–∂–µ—Ç">
                        <i class="fa fa-plus-circle"></i>
                    </button>

                    <!-- –î–æ–¥–∞—Ç–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª -->
                    <button class="hierarchy-tree-action btn-tree-secondary"
                            t-on-click.stop="() => this.createChildNode(node)"
                            title="–î–æ–¥–∞—Ç–∏ –¥–æ—á—ñ—Ä–Ω—ñ–π –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª">
                        <i class="fa fa-plus"></i>
                    </button>

                    <!-- –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ -->
                    <button class="hierarchy-tree-action btn-tree-secondary"
                            t-on-click.stop="() => this.openNodeForm(node)"
                            title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¶–ë–û">
                        <i class="fa fa-edit"></i>
                    </button>
                </div>
            </div>

            <!-- –î–æ—á—ñ—Ä–Ω—ñ –≤—É–∑–ª–∏ -->
            <div t-if="isExpanded and hasChildren"
                 class="hierarchy-tree-children expanding">
                <t t-foreach="node.children" t-as="childNode" t-key="childNode.id">
                    <t t-call="budget.HierarchyTreeNode">
                        <t t-set="node" t-value="childNode"/>
                        <t t-set="level" t-value="level + 1"/>
                    </t>
                </t>
            </div>
        </div>
    </t>

    <!-- –°–ü–†–û–©–ï–ù–ò–ô –®–ê–ë–õ–û–ù –î–õ–Ø DASHBOARD -->
    <t t-name="budget.SimpleTreeWidget" owl="1">
        <div class="simple-tree-widget">
            <div class="tree-header">
                <h5>–®–≤–∏–¥–∫–∏–π –ø–µ—Ä–µ–≥–ª—è–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏</h5>
                <button class="btn btn-sm btn-outline-primary float-right"
                        t-on-click="() => this.openFullTree()">
                    <i class="fa fa-expand"></i>
                    –ü–æ–≤–Ω–∏–π –ø–µ—Ä–µ–≥–ª—è–¥
                </button>
            </div>

            <div class="tree-content">
                <t t-if="state.loading">
                    <div class="text-center p-3">
                        <i class="fa fa-spinner fa-spin"></i>
                        –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...
                    </div>
                </t>

                <t t-else="">
                    <t t-foreach="state.treeData.slice(0, 5)" t-as="node" t-key="node.id">
                        <div class="simple-tree-item">
                            <i t-att-class="`fa ${node.icon} text-muted`"></i>
                            <span t-esc="node.name"></span>
                            <span t-if="node.budget_count > 0"
                                  class="badge badge-info float-right">
                                <t t-esc="node.budget_count"/>
                            </span>
                        </div>
                    </t>

                    <div t-if="state.treeData.length > 5" class="text-muted text-center">
                        ... —Ç–∞ —â–µ <t t-esc="state.treeData.length - 5"/> –¶–ë–û
                    </div>
                </t>
            </div>
        </div>
    </t>

    <!-- –®–ê–ë–õ–û–ù –ö–ê–†–¢–ö–ò –¶–ë–û -->
    <t t-name="budget.CBOCard" owl="1">
        <div class="organization-tree-card"
             t-att-class="`cbo-type-${node.cbo_type}`"
             t-on-click="() => this.selectNode(node.id)">

            <div class="card-body">
                <div class="d-flex align-items-center">
                    <!-- –Ü–∫–æ–Ω–∫–∞ -->
                    <div class="o_kanban_image mr-3">
                        <i t-att-class="`fa ${node.icon} fa-2x ${node.color_class}`"></i>
                    </div>

                    <!-- –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è -->
                    <div class="flex-grow-1">
                        <h6 class="o_kanban_record_title mb-1">
                            <t t-esc="node.name"/>
                        </h6>
                        <p class="o_kanban_record_subtitle mb-1">
                            <t t-esc="node.code"/>
                        </p>
                        <small class="text-muted">
                            <t t-esc="node.cbo_type"/>
                        </small>
                    </div>

                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                    <div class="text-right">
                        <div t-if="node.budget_count > 0" class="mb-1">
                            <span class="badge badge-info">
                                <i class="fa fa-bar-chart"></i>
                                <t t-esc="node.budget_count"/>
                            </span>
                        </div>
                        <div t-if="node.child_count > 0">
                            <span class="badge badge-secondary">
                                <i class="fa fa-building"></i>
                                <t t-esc="node.child_count"/>
                            </span>
                        </div>
                    </div>
                </div>

                <!-- –ü—Ä–æ–≥—Ä–µ—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è -->
                <div t-if="node.execution_rate > 0" class="mt-2">
                    <div class="progress" style="height: 4px;">
                        <div class="progress-bar"
                             t-att-class="`bg-${getExecutionBadgeClass(node.execution_rate)}`"
                             t-att-style="`width: ${node.execution_rate}%`">
                        </div>
                    </div>
                    <small class="text-muted">
                        –í–∏–∫–æ–Ω–∞–Ω–Ω—è: <t t-esc="node.execution_rate.toFixed(1)"/>%
                    </small>
                </div>
            </div>
        </div>
    </t>

    <!-- TOOLTIP –®–ê–ë–õ–û–ù -->
    <t t-name="budget.TreeTooltip" owl="1">
        <div class="hierarchy-tooltip"
             t-att-style="`left: ${position.x}px; top: ${position.y}px;`">
            <div class="font-weight-bold mb-1">
                <t t-esc="node.name"/>
            </div>
            <div class="small">
                <div>–¢–∏–ø: <t t-esc="node.cbo_type"/></div>
                <div t-if="node.code">–ö–æ–¥: <t t-esc="node.code"/></div>
                <div t-if="node.budget_count > 0">
                    –ë—é–¥–∂–µ—Ç—ñ–≤: <t t-esc="node.budget_count"/>
                </div>
                <div t-if="node.child_count > 0">
                    –ü—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤: <t t-esc="node.child_count"/>
                </div>
                <div t-if="node.execution_rate > 0">
                    –í–∏–∫–æ–Ω–∞–Ω–Ω—è: <t t-esc="node.execution_rate.toFixed(1)"/>%
                </div>
            </div>
        </div>
    </t>

    <!-- –†–û–ó–®–ò–†–ï–ù–ò–ô –®–ê–ë–õ–û–ù –î–ï–†–ï–í–ê -->
    <t t-name="budget.AdvancedTreeWidget" owl="1">
        <div class="advanced-tree-widget" t-ref="advanced-tree-widget">

            <!-- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è -->
            <div t-if="state.loading" class="tree-loading">
                <div class="loading-spinner">
                    <i class="fa fa-spinner fa-spin fa-2x"></i>
                    <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏...</p>
                </div>
            </div>

            <!-- –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
            <div t-else="">
                <!-- –ü–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ -->
                <div class="tree-toolbar">
                    <div class="toolbar-left">
                        <!-- –ü–æ—à—É–∫ -->
                        <div class="search-container">
                            <input type="text"
                                   class="tree-search form-control"
                                   placeholder="üîç –ü–æ—à—É–∫ –≤ –¥–µ—Ä–µ–≤—ñ..."
                                   t-model="state.searchQuery"
                                   t-on-input="(ev) => this.searchDebounced(ev.target.value)"/>
                        </div>

                        <!-- –ü–µ—Ä–µ–º–∏–∫–∞—á —Ä–µ–∂–∏–º—É –ø–µ—Ä–µ–≥–ª—è–¥—É -->
                        <div class="view-mode-selector btn-group">
                            <button class="btn btn-sm"
                                    t-att-class="state.viewMode === 'tree' ? 'btn-primary' : 'btn-outline-primary'"
                                    t-on-click="() => this.setViewMode('tree')">
                                üå≥ –î–µ—Ä–µ–≤–æ
                            </button>
                            <button class="btn btn-sm"
                                    t-att-class="state.viewMode === 'cards' ? 'btn-primary' : 'btn-outline-primary'"
                                    t-on-click="() => this.setViewMode('cards')">
                                üé¥ –ö–∞—Ä—Ç–∫–∏
                            </button>
                            <button class="btn btn-sm"
                                    t-att-class="state.viewMode === 'compact' ? 'btn-primary' : 'btn-outline-primary'"
                                    t-on-click="() => this.setViewMode('compact')">
                                üìÑ –ö–æ–º–ø–∞–∫—Ç–Ω–æ
                            </button>
                        </div>
                    </div>

                    <div class="toolbar-right">
                        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                        <div class="tree-stats">
                            <span class="stat-item">
                                <i class="fa fa-sitemap"/>
                                <t t-esc="this._getTotalNodes()"/>
                            </span>
                            <span class="stat-item" t-if="state.selectedNodes.size > 0">
                                <i class="fa fa-check-square"/>
                                <t t-esc="state.selectedNodes.size"/>
                            </span>
                        </div>

                        <!-- –î—ñ—ó -->
                        <div class="tree-actions-group btn-group">
                            <button class="btn btn-sm btn-outline-secondary"
                                    t-on-click="expandAll"
                                    title="–†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ –≤—Å–µ">
                                <i class="fa fa-expand"/>
                            </button>
                            <button class="btn btn-sm btn-outline-secondary"
                                    t-on-click="collapseAll"
                                    title="–ó–≥–æ—Ä–Ω—É—Ç–∏ –≤—Å–µ">
                                <i class="fa fa-compress"/>
                            </button>
                            <button class="btn btn-sm btn-outline-primary"
                                    t-on-click="() => this.loadTreeData(true)"
                                    title="–û–Ω–æ–≤–∏—Ç–∏">
                                <i class="fa fa-refresh"/>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–µ—Ä–µ–≤–∞ -->
                <div class="tree-container"
                     t-ref="tree-container"
                     t-if="!state.loading">

                    <t t-if="state.treeData.length > 0">
                        <t t-foreach="state.treeData" t-as="node" t-key="node.id">
                            <t t-call="budget.AdvancedTreeNode">
                                <t t-set="node" t-value="node"/>
                                <t t-set="level" t-value="0"/>
                            </t>
                        </t>
                    </t>

                    <!-- –ü—É—Å—Ç–∏–π —Å—Ç–∞–Ω -->
                    <div t-else="" class="tree-empty-state">
                        <div class="empty-icon">üå≥</div>
                        <h3>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä–æ–∂–Ω—è</h3>
                        <p>–î–æ–¥–∞–π—Ç–µ –¶–ë–û –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ä–µ–≤–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó</p>
                        <button class="btn btn-primary"
                                t-on-click="() => this._createRootNode()">
                            ‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—à–µ –¶–ë–û
                        </button>
                    </div>
                </div>

                <!-- –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–µ –º–µ–Ω—é -->
                <div t-if="state.showContextMenu"
                     class="context-menu"
                     t-att-style="`left: ${state.contextMenuPosition.x}px; top: ${state.contextMenuPosition.y}px; display: block;`">
                    <div class="context-menu-item"
                         t-on-click="() => this.contextMenuAction('view')">
                        üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                    </div>
                    <div class="context-menu-item"
                         t-on-click="() => this.contextMenuAction('edit')">
                        ‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                    </div>
                    <div class="context-menu-separator"></div>
                    <div class="context-menu-item"
                         t-on-click="() => this.contextMenuAction('create_child')">
                        ‚ûï –î–æ–¥–∞—Ç–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª
                    </div>
                    <div class="context-menu-item"
                         t-on-click="() => this.contextMenuAction('create_budget')">
                        üí∞ –°—Ç–≤–æ—Ä–∏—Ç–∏ –±—é–¥–∂–µ—Ç
                    </div>
                    <div t-if="state.contextMenuNode and state.contextMenuNode.budget_count > 0"
                         class="context-menu-item"
                         t-on-click="() => this.contextMenuAction('view_budgets')">
                        üìä –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –±—é–¥–∂–µ—Ç–∏
                    </div>
                    <div class="context-menu-separator"></div>
                    <div class="context-menu-item"
                         t-on-click="() => this.contextMenuAction('clone')">
                        üìã –ö–ª–æ–Ω—É–≤–∞—Ç–∏
                    </div>
                    <div class="context-menu-item"
                         t-on-click="() => this.contextMenuAction('export')">
                        üì§ –ï–∫—Å–ø–æ—Ä—Ç
                    </div>
                    <div class="context-menu-separator"></div>
                    <div class="context-menu-item danger"
                         t-on-click="() => this.contextMenuAction('delete')">
                        üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                    </div>
                </div>
            </div>
        </div>
    </t>

    <!-- –í–£–ó–û–õ –†–û–ó–®–ò–†–ï–ù–û–ì–û –î–ï–†–ï–í–ê -->
    <t t-name="budget.AdvancedTreeNode" owl="1">
        <t t-set="isExpanded" t-value="state.expandedNodes.has(node.id)"/>
        <t t-set="isSelected" t-value="state.selectedNodes.has(node.id)"/>
        <t t-set="hasChildren" t-value="node.children and node.children.length > 0"/>

        <div class="tree-node"
             t-att-class="{
                'selected': isSelected,
                ['cbo-type-' + node.cbo_type]: true,
                ['tree-level-' + level]: true,
                'inactive': !node.active
             }"
             t-att-data-node-id="node.id"
             t-att-data-level="level"
             t-on-click="(ev) => this.selectNode(node.id, ev.ctrlKey)"
             t-on-contextmenu="(ev) => this.showContextMenu(ev, node.id)"
             t-on-dblclick="() => this._openNodeForm(node)">

            <div class="node-content" t-att-style="`padding-left: ${level * 20}px`">
                <!-- Toggle –∫–Ω–æ–ø–∫–∞ -->
                <span class="node-toggle"
                      t-att-class="{'has-children': hasChildren}"
                      t-on-click.stop="() => this.toggleNode(node.id)">
                    <t t-if="hasChildren">
                        <t t-if="isExpanded">‚ñº</t>
                        <t t-else="">‚ñ∂</t>
                    </t>
                </span>

                <!-- –Ü–∫–æ–Ω–∫–∞ -->
                <span class="node-icon">
                    <i t-att-class="`fa ${node.icon || 'fa-folder'} ${node.color_class || 'text-secondary'}`"></i>
                </span>

                <!-- –ù–∞–∑–≤–∞ -->
                <span class="node-label" t-att-title="node.name">
                    <t t-esc="node.name"/>
                </span>

                <!-- –ö–æ–¥ -->
                <span t-if="node.code" class="node-code">
                    [<t t-esc="node.code"/>]
                </span>

                <!-- –ú–µ—Ç–∞–¥–∞–Ω—ñ -->
                <span class="node-meta">
                    <t t-if="node.budget_count > 0">
                        <span class="badge badge-info">
                            <t t-esc="node.budget_count"/> üìä
                        </span>
                    </t>
                    <t t-if="node.child_count > 0">
                        <span class="badge badge-secondary">
                            <t t-esc="node.child_count"/> üè¢
                        </span>
                    </t>
                </span>
            </div>

            <!-- –î–æ—á—ñ—Ä–Ω—ñ –≤—É–∑–ª–∏ -->
            <div t-if="isExpanded and hasChildren" class="node-children">
                <t t-foreach="node.children" t-as="childNode" t-key="childNode.id">
                    <t t-call="budget.AdvancedTreeNode">
                        <t t-set="node" t-value="childNode"/>
                        <t t-set="level" t-value="level + 1"/>
                    </t>
                </t>
            </div>
        </div>
    </t>

</templates>